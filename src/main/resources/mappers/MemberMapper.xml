<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.finalProject.project.dao.IMemberDAO">
  <!-- 암호화 이전에 사용  -->
  <!-- <select id="loginCheck" parameterType="hashmap" resultType="string">
  SELECT memId FROM member WHERE memId=#{id} AND memPw=#{pwd}
  </select> -->
  
  <!-- 암호화 한 후 로그인 확인  -->
  <select id="loginCheck" parameterType="string" resultType="string">
  SELECT memPw FROM member WHERE memId=#{id}
  </select> 
  <!-- 화원등록 -->
   <insert id="insertMember" parameterType="com.finalProject.project.model.MemberVO">
  INSERT INTO member (memId, memPw, memName, memEmail, memHp, memZipcode, memAddress1, memAddress2, memNickname, memRoot)
        VALUES (#{memId}, #{memPw}, #{memName}, #{memEmail}, #{memHp}, #{memZipcode}, #{memAddress1}, #{memAddress2}, #{memNickname}, #{memRoot})

   </insert>
     <!--중복 검사-->
     <select id="memIdCheck" parameterType="String"  resultType="string">
	SELECT memId FROM member where memId = #{memId}
	</select>
	<!-- 회원정보  -->
	
	<select id="memberInfo" parameterType="String" resultType="com.finalProject.project.model.MemberVO">
		
		SELECT * FROM member
		where memId = #{memId}
	
	
	</select>
<!-- 회원 정보 수정  -->
	<update id ="updatemember" parameterType="string">
	update member
	set
	memName=#{memName},
	memNickname=#{memNickname},
	memHp=#{memHp},
	memZipcode=#{memZipcode},
	memAddress1=#{memAddress1},
	memAddress2=#{memAddress2}
	where memId = #{memId}

	</update>
<!-- 회원 정보 삭제 -->
	<delete id="deletemember" parameterType="com.finalProject.project.model.MemberVO">
		DELETE FROM member WHERE memId=#{memId}
	</delete>

   <!-- 비밀번호 변경 -->
   <update id="modifymemPw" parameterType="hashmap">
   update member
   set memPw=#{newmemPw}
   WHERE memId = #{memId}
   </update>
  <!-- 찜하기 -->
   <select id="exLikeList" parameterType="String" resultType="hashmap">
		SELECT el.elNo, el.routineCreateDate, el.routineNo, dinfo.routineName
    FROM exerciselist el
    INNER JOIN detailinfo dinfo
    ON el.routineNo = dinfo.routineNo
    WHERE memId = #{memId}
    order by el.elNo desc
	</select>
  

  <select id="spLikeList" parameterType="String" resultType="hashmap">
		SELECT sl.spNo, sl.spmCreateDate, sl.spmName, spms.spmName, spms.spmImg
    FROM spmlist sl
    INNER JOIN supplements spms
    ON sl.spmName = spms.spmName
    WHERE memId = #{memId}
    order by sl.spNo desc
	</select>

  <delete id="deleteExList" parameterType="hashmap">
		DELETE FROM exerciselist WHERE memId=#{memId} AND elNo = #{elNo}
	</delete>

  <delete id="deleteSpList" parameterType="hashmap">
		DELETE FROM spmlist WHERE memId=#{memId} AND spNo = #{spNo}
	</delete>
  </mapper>